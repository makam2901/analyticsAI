apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: analytics-ai-backend
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    run.googleapis.com/ingress: all
spec:
  template:
    metadata:
      annotations:
        # Cost optimization: Set minimum instances to 0 for on-demand scaling
        autoscaling.knative.dev/minScale: "0"
        autoscaling.knative.dev/maxScale: "10"
        # CPU throttling for cost savings
        run.googleapis.com/cpu-throttling: "true"
        # Execution environment
        run.googleapis.com/execution-environment: gen2
    spec:
      # Container configuration
      containerConcurrency: 100
      timeoutSeconds: 300
      containers:
      - image: gcr.io/PROJECT_ID/analytics-ai-backend:latest
        ports:
        - containerPort: 8080
        env:
        # Application configuration
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: DATABASE_PATH
          value: "/tmp/analytics_ai.db"
        - name: PYTHONPATH
          value: "/app"
        - name: PROJECT_ID
          value: "PROJECT_ID"
        - name: DEFAULT_BUCKET
          value: "ai-analysis-default-bucket"
        - name: NODE_ENV
          value: "production"
        - name: FRONTEND_URL
          value: "https://analytics-ai-frontend-i73iz6e3wq-uc.a.run.app"
        # API Keys (use Secret Manager)
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-api-key
              key: latest
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: latest
        # Resource limits for cost optimization
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        # Health checks
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
  traffic:
  - percent: 100
    latestRevision: true
